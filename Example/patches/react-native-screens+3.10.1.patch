diff --git a/node_modules/react-native-screens/ios/RNSScreen.m b/node_modules/react-native-screens/ios/RNSScreen.m
index e0dd2ba..5d32d19 100644
--- a/node_modules/react-native-screens/ios/RNSScreen.m
+++ b/node_modules/react-native-screens/ios/RNSScreen.m
@@ -749,7 +749,19 @@ - (void)setupProgressNotification
     _fakeView.alpha = 0.0;
     NSMutableArray<NSArray *> *sharedElements = nil;
     if (_closing) {
-      sharedElements = [RNSSharedElementAnimator prepareSharedElementsArrayForVC:self];
+      if (self == [self.transitionCoordinator viewControllerForKey:UITransitionContextToViewControllerKey]) {
+        UIViewController *anotherVC = [self.transitionCoordinator viewControllerForKey:UITransitionContextFromViewControllerKey];
+        sharedElements = [RNSSharedElementAnimator prepareSharedElementsArrayForVC:self anotherVC:anotherVC];
+      } else {
+        UIViewController *anotherVC = [self.transitionCoordinator viewControllerForKey:UITransitionContextToViewControllerKey];
+        sharedElements = [RNSSharedElementAnimator prepareSharedElementsArrayForVC:self anotherVC:anotherVC];
+      }
+    }
+
+    if (self->_closing) {
+      [RNSScreen asignEndingValuesWithTransitionContext:self.transitionCoordinator
+                                         sharedElements:sharedElements
+                                           goingForward:self->_goingForward];
     }
 
     [self.transitionCoordinator
@@ -762,9 +774,6 @@ - (void)setupProgressNotification
               // we add all views immediately, otherwise it won't work correctly
               [[context containerView] addSubview:endingView];
             }
-            [RNSScreen asignEndingValuesWithTransitionContext:context
-                                               sharedElements:sharedElements
-                                                 goingForward:self->_goingForward];
           }
 
           self->_animationTimer = [CADisplayLink displayLinkWithTarget:self selector:@selector(handleAnimation)];
@@ -792,7 +801,7 @@ - (void)notifyTransitionProgress:(double)progress closing:(BOOL)closing goingFor
   [((RNSScreenView *)self.view) notifyTransitionProgress:progress closing:closing goingForward:goingForward];
 }
 
-+ (void)asignEndingValuesWithTransitionContext:(id<UIViewControllerTransitionCoordinatorContext> _Nonnull)context
++ (void)asignEndingValuesWithTransitionContext:(id<UIViewControllerTransitionCoordinator> _Nonnull)context
                                 sharedElements:(NSMutableArray<NSArray *> *)sharedElements
                                   goingForward:(BOOL)goingForward
 {
@@ -846,7 +855,7 @@ - (void)cleanupAfterTransitionWithSharedElements:(NSMutableArray<NSArray *> *)sh
     UIView *endingContainer = sharedElement[2];
     int index = [sharedElement[3] intValue];
     [endingContainer insertSubview:endingView atIndex:index];
-    endingView.frame = [sharedElement[4] CGRectValue];
+//    endingView.frame = [sharedElement[4] CGRectValue];
     UIView *startingView = sharedElement[0];
     startingView.hidden = NO;
   }
diff --git a/node_modules/react-native-screens/ios/RNSSharedElementAnimator.h b/node_modules/react-native-screens/ios/RNSSharedElementAnimator.h
index 6f1d46c..8fd4286 100644
--- a/node_modules/react-native-screens/ios/RNSSharedElementAnimator.h
+++ b/node_modules/react-native-screens/ios/RNSSharedElementAnimator.h
@@ -1,5 +1,18 @@
+@interface SharedViewConfig: NSObject;
+
+- (void)setView:(UIView *)view;
+- (UIView *)getView;
+
+@property NSNumber *viewTag;
+@property BOOL toRemove;
+
+@end
+
 @protocol RNSSharedElementTransitionsDelegate <NSObject>
 
+@property NSMutableDictionary<NSString *, NSMutableArray<SharedViewConfig *>*> * sharedTransitionsItems;
+- (void)afterPreparingCallback;
+
 - (void)reanimatedMockTransitionWithConverterView:(UIView *)converter
                                          fromView:(UIView *)fromView
                                 fromViewConverter:(UIView *)startingViewConverter
@@ -13,6 +26,6 @@
 
 + (void)setDelegate:(NSObject<RNSSharedElementTransitionsDelegate> *)delegate;
 + (NSObject<RNSSharedElementTransitionsDelegate> *)getDelegate;
-+ (NSMutableArray<NSArray *> *)prepareSharedElementsArrayForVC:(UIViewController *)vc;
++ (NSMutableArray<NSArray *> *)prepareSharedElementsArrayForVC:(UIViewController *)vc anotherVC:(UIViewController *)anotherVC;
 
 @end
diff --git a/node_modules/react-native-screens/ios/RNSSharedElementAnimator.m b/node_modules/react-native-screens/ios/RNSSharedElementAnimator.m
index 4c82bf4..5981788 100644
--- a/node_modules/react-native-screens/ios/RNSSharedElementAnimator.m
+++ b/node_modules/react-native-screens/ios/RNSSharedElementAnimator.m
@@ -17,26 +17,47 @@ + (void)setDelegate:(NSObject<RNSSharedElementTransitionsDelegate> *)delegate
   return _delegate;
 }
 
-+ (NSMutableArray<NSArray *> *)prepareSharedElementsArrayForVC:(UIViewController *)vc
++ (NSMutableArray<NSArray *> *)prepareSharedElementsArrayForVC:(UIViewController *)viewController anotherVC:(UIViewController *)anotherViewController
 {
   NSMutableArray<NSArray *> *sharedElementsArray = [NSMutableArray new];
 
-  NSArray<__kindof UIViewController *> *viewControllers = vc.navigationController.viewControllers;
-  RNSScreenView *screenView = (RNSScreenView *)vc.view;
+  NSArray<__kindof UIViewController *> *viewControllers = viewController.navigationController.viewControllers;
+  RNSScreenView *screenView = (RNSScreenView *)viewController.view;
 
-  for (NSDictionary *sharedElementDict in screenView.sharedElements) {
-    UIView *fromView = [[screenView bridge].uiManager viewForNativeID:sharedElementDict[@"fromID"]
-                                                          withRootTag:[screenView rootTag]];
-    UIView *toView = [[screenView bridge].uiManager viewForNativeID:sharedElementDict[@"toID"]
-                                                        withRootTag:[screenView rootTag]];
+  RCTUIManager *uiManager = [screenView bridge].uiManager;
+  NSNumber *rootTag = [screenView rootTag];
+  for (NSString *key in _delegate.sharedTransitionsItems) {
+    NSArray<SharedViewConfig *> *sharedViewConfigs = _delegate.sharedTransitionsItems[key];
+    UIView *fromView, *toView;
+    for (SharedViewConfig *sharedViewConfig in sharedViewConfigs) {
+      UIView *view = [uiManager viewForReactTag:sharedViewConfig.viewTag];
+      if (view == nil) {
+        view = [sharedViewConfig getView];
+      }
+      else {
+        [sharedViewConfig setView:view];
+      }
+      UIViewController *viewConstroller = [view reactViewController];
+      BOOL isUnderViewController = (viewConstroller == viewController || viewConstroller == anotherViewController);
+      if (fromView == nil && isUnderViewController) {
+        fromView = view;
+        continue;
+      }
+      if (fromView != nil && isUnderViewController) {
+        toView = view;
+        break;
+      }
+    }
 
-    if (fromView == nil || toView == nil) {
-      break;
+    BOOL isAnyNull = fromView == nil || toView == nil;
+    BOOL hasCorrectRootTag = [fromView rootTag] == rootTag && [toView rootTag] == rootTag;
+    if (isAnyNull || !hasCorrectRootTag) {
+      continue;
     }
     
     UIView *start;
     UIView *end;
-    if ([viewControllers containsObject:vc]) {
+    if ([viewControllers containsObject:viewController]) {
       // we are in previous vc and going forward
       start = fromView;
       end = toView;
@@ -57,6 +78,7 @@ + (void)setDelegate:(NSObject<RNSSharedElementTransitionsDelegate> *)delegate
       [sharedElementsArray addObject:@[ start, end, endContainer, @(endIndex), @(endFrame) ]];
     }
   }
+  [_delegate afterPreparingCallback];
 
   return sharedElementsArray;
 }
diff --git a/node_modules/react-native-screens/src/native-stack/views/NativeStackView.tsx b/node_modules/react-native-screens/src/native-stack/views/NativeStackView.tsx
index d0aa06b..1606d86 100644
--- a/node_modules/react-native-screens/src/native-stack/views/NativeStackView.tsx
+++ b/node_modules/react-native-screens/src/native-stack/views/NativeStackView.tsx
@@ -157,7 +157,6 @@ const RouteView = ({
     nativeBackButtonDismissalEnabled = false,
     replaceAnimation = 'pop',
     screenOrientation,
-    sharedElements,
     stackAnimation,
     statusBarAnimation,
     statusBarColor,
@@ -209,7 +208,6 @@ const RouteView = ({
       nativeBackButtonDismissalEnabled={nativeBackButtonDismissalEnabled}
       replaceAnimation={replaceAnimation}
       screenOrientation={screenOrientation}
-      sharedElements={sharedElements}
       stackAnimation={stackAnimation}
       stackPresentation={stackPresentation}
       statusBarAnimation={statusBarAnimation}
